#shellcheck disable=2148
function testssl-report() {
set -u
if [[ $(command -v openssl-unsafe) ]]; then
  testssl -p -e -f --color 0 --openssl /usr/bin/openssl-unsafe --mapping no-openssl "$1" | sed -r 's/^ x[0-9a-f]{2,}[ ]{3,}([^ ]*).*/\1/' | sed -r 's/^-{90}/-------------/' | sed 's/Hexcode.*/Cipher Suites/'
elif [[ $(command -v openssl) ]]; then
  testssl -p -e -f --color 0 --openssl /usr/bin/openssl --mapping no-openssl "$1" | sed -r 's/^ x[0-9a-f]{2,}[ ]{3,}([^ ]*).*/\1/' | sed -r 's/^-{90}/-------------/' | sed 's/Hexcode.*/Cipher Suites/'
fi
set +u
}

function testssl-update() {
set -u
if [[ ! -d $HOME/Repos/testssl.sh ]]; then
  (
  cd "$HOME/Repos" || exit 1
  git clone --single-branch -depth 1 -b '3.0' https://github.com/drwetter/testssl.sh
  )
else
  (
  cd "$HOME/Repos/testssl.sh" || exit 1
  git pull
  )
fi
set +u
}


function testssl() {
set -u
if [[ ! -d $HOME/Repos/testssl.sh ]]; then
  echo -n "$HOME/Repos/testssl.sh does not seem to exist.
Do you want to create it now? [Y/N] "
  read -r confirm
  if [[ "${confirm}" =~ ^[Yy]{1} ]]; then
    testssl-update
  else
    echo "Aborting"
    exit 1
  fi
fi
if [[ -d $HOME/Repos/testssl.sh ]]; then
  if [[ $(command -v openssl-unsafe &>/dev/null) ]]; then
    #shellcheck disable=2068
    "$HOME/Repos/testssl.sh/testssl.sh" --openssl /usr/bin/openssl-unsafe $@
  elif [[ $(command -v openssl &>/dev/null) ]]; then
    #shellcheck disable=2068
    "$HOME/Repos/testssl.sh/testssl.sh" --openssl /usr/bin/openssl $@
  fi
fi
set +u
}
