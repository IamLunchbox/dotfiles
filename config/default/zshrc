# delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_expire_dups_first
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt nonomatch
# History, default settings
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=2000
bindkey -e

#color and content of the PS1 prompt in zsh
autoload -U colors && colors
zstyle ':completion:*' menu select
autoload -U compinit && compinit
setopt GLOB_COMPLETE
autoload -U select-word-style
select-word-style bash
PS1=""

if [[ -n "$SSH_CLIENT" ]] || [[ -n "$SSH_TTY" ]]; then
  if [[ -n $SSH_CONNECTION ]]; then 
    setopt prompt_subst
    PS1='%F{174}`echo $SSH_CONNECTION | cut -d " " -f 3`:%f'
  fi 
  bindkey '^H'  backward-kill-word
elif [[ $TERM_PROGRAM == "vscode" ]]; then
  bindkey '^W'  backward-kill-word
else 
  bindkey '^H'  backward-kill-word
fi
if cat /etc/debian_version &> /dev/null && [[ $(cat /etc/debian_version) == "kali-rolling" ]]; then
  PS1+=$'%B%F{124}%d%f%b\n%F{243}%n@%M%f%(!. %B%F{red}#%b%f.%F{243}:%f)%f '
else;
  PS1+=$'%B%F{166}%d%f%b\n%F{243}%n@%M%f%(!. %B%F{red}#%b%f.%F{243}:%f)%f '
fi
RPROMPT='%(?.%B%F{green}√%b%f.%B%F{red}✗%b%?%f)'
PATH="${PATH}:${HOME}/.local/bin"
# If one keybinding behaves unexpected, use ctrl+v or cat -v to investigate
bindkey	"^[[3~" delete-char
bindkey	"^[[1;5C"	forward-word
bindkey	"^[[1;5D"	backward-word
bindkey '^[[3;5~'  kill-word

#Suggest entries from the zsh history for autocomplete
if [[ -f /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]]; then
  source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
elif [[ -f /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]]; then
  source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# Highlight valid entries and syntax
if [[ -f /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]]; then
  source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
elif [[ -f /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh ]]; then
  source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh
fi

if [[ -f "$HOME/.aliases" ]]; then
  source $HOME/.aliases
fi
if [[ -f "$HOME/.local-aliases" ]]; then
  source $HOME/.local-aliases
fi
if [[ -h "$HOME/.zsh-functions" ]]; then
  for func in $HOME/.zsh-functions/*; do
    source $func;
  done
fi
